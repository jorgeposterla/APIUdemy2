<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Liz" failures="0" tests="4" name="Books" time="3.664" errors="1" timestamp="2021-11-05T21:36:28 ART" skipped="0">
  <testcase classname="Books" name="deleteNonExistentBook_FailMessage" time="0.393"/>
  <system-out/>
  <testcase classname="Books" name="booksSchemaIsValid" time="0.013">
    <error message="Ambiguous method overloading for method java.io.File#&lt;init&gt;.
Cannot resolve which method to invoke for [null] due to overlapping prototypes between:
	[class java.net.URI]
	[class java.lang.String]" type="groovy.lang.GroovyRuntimeException">
      <![CDATA[groovy.lang.GroovyRuntimeException: Ambiguous method overloading for method java.io.File#<init>.
Cannot resolve which method to invoke for [null] due to overlapping prototypes between:
[class java.net.URI]
[class java.lang.String]
at groovy.lang.MetaClassImpl.doChooseMostSpecificParams(MetaClassImpl.java:3354)
at groovy.lang.MetaClassImpl.chooseMostSpecificParams(MetaClassImpl.java:3330)
at groovy.lang.MetaClassImpl.chooseMethodInternal(MetaClassImpl.java:3320)
at groovy.lang.MetaClassImpl.chooseMethod(MetaClassImpl.java:3264)
at groovy.lang.MetaClassImpl.createConstructorSite(MetaClassImpl.java:3566)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.createCallConstructorSite(CallSiteArray.java:85)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at Books.booksSchemaIsValid(Books.groovy:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
    </error>
  </testcase> <!-- booksSchemaIsValid -->
  <system-out/>
  <testcase classname="Books" name="createAndDeletebook" time="2.391"/>
  <system-out/>
  <testcase classname="Books" name="getBooksList" time="0.867"/>
  <system-out/>
</testsuite> <!-- Books -->
